#https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: klerith/k8s-teslo-backend:1.1.0
        ports:
        - containerPort: 3000
        env:
        #https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html
        - name: APP_VERSION
          value: "1.1.0"
        - name: PORT
          value: "3000"
        - name: STAGE
          value: "prod"                
        
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: DB_PASSWORD
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: DB_USER

        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: DB_NAME
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: DB_HOST
        - name: DB_PORT 
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: DB_PORT
        
        - name: JWT_SECRET 
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: JWT_SECRET


--- #indica que es otro archivo
#https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  #https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  type: NodePort
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 3000 #cualquier puerto para contectarse desde afuera
      targetPort: 3000 #puerto del containerPort Deployment
      nodePort: 30300
